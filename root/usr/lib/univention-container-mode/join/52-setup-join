#!/bin/bash
#
# Univention Container Mode - setup-join
#
# Copyright 2020-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## util(s)
source /usr/lib/univention-container-mode/utils.sh || exit 1

## function(s)
# function name() { # name: (IN)[>(OUT)]
# 	echo function
# }

## ucr shell
eval "$(ucr shell hostname domainname password/hashing/method machine/password/complexity machine/password/length ldap/base)"

## declare
declare -a ucrchanges
# ucrchanges+=("key=value")
declare -a ucrremoves
# ucrremoves+=("key")

declare -A ucrcounter
# ucrcounter[<STRING>]=<INT>
ucrcounter[nameserver]=1
ucrcounter[forwarder]=1

declare -A ucrcommit
# ucrcommit+=/<PATH>/<FILE> OR ucrcommit[<FILE>]=/<PATH>/<FILE>
ucrcommit[postfix.secret]=/etc/listfilter.secret
ucrcommit[postfix.config]=/etc/postfix/*
ucrcommit[resolv.conf]=/etc/resolv.conf

debug "### START SCRIPT($(pwd)/$0) ###"
## Setup join from container mode environment
# role   : <string> default(master)
# rootpw : <string> default(random)
# sshkey : <string>
#
[[ -z ${role:-} ]] && role=master

echo -n ${role} | awk '\
	 /[a-zA-Z]/{ print "SERVER ROLE("tolower($1)")" } \
	!/[a-zA-Z]/{ print "SERVER ROLE MISSSPELLED: SET ROLE TO DEFAULT(master). USE ENVIRONMENT( role=<master|slave|backup|member> )" }'

role=$(
	echo -n ${role} | awk '\
	 /[a-zA-Z]/{ printf tolower($1) } \
	!/[a-zA-Z]/{ printf "master" }'
)

# import ssh public key
#
[[ -z ${sshkey:-} ]] || {
	mkdir --parents /root/.ssh && {
		touch /root/.ssh/authorized_keys &&
			echo ${sshkey} >/root/.ssh/authorized_keys
	}
}

# generate root/Administrator password if needed
#
[[ -z ${rootpw:-} ]] && passwd=$(
	pwgen -1 -${machine_password_complexity:-scn} ${machine_password_length:-64} | tr --delete '\n'
)
[[ -z ${passwd:-} ]] || echo -n ${passwd} >/dev/shm/univention-container-mode.secrets
[[ -z ${rootpw:-} ]] && rootpw=${passwd}
#
# set root password
#
usermod --password $(mkpasswd -H ${password_hashing_method:-SHA-512} "${rootpw}") root
#

# set nameserver and forwarder if dcwait active
#
[[ ${dcwait-} =~ ^1|yes|true|YES|TRUE$ ]] && {
	#
	for ns in ${nameserver[@]:-}; do
		[[ ${ucrcounter[nameserver]} > 3 ]] && break
		ucrchanges+=("nameserver${ucrcounter[nameserver]}=${ns}")
		ucrcounter[nameserver]=$((${ucrcounter[nameserver]} + 1))
	done
	#
	for ns in ${forwarder[@]:-}; do
		[[ ${ucrcounter[forwarder]} > 3 ]] && break
		ucrchanges+=("dns/forwarder${ucrcounter[forwarder]}=${ns}")
		ucrcounter[forwarder]=$((${ucrcounter[forwarder]} + 1))
	done
	#
	UniventionConfigRegistrySet ${ucrchanges[@]}
}
#
# set nameserver and forwarder if dcwait active

# check for system role package
#
UniventionSystemInstallSystemRolePrefix="univention-server-"
UniventionSystemInstallSystemRole=$(
	apt-cache search ${UniventionSystemInstallSystemRolePrefix} | egrep -- "^${UniventionSystemInstallSystemRolePrefix}${role}\s" |
		awk '\
				 /^'${UniventionSystemInstallSystemRolePrefix}${role}'/{ printf $1 } \
				!/^'${UniventionSystemInstallSystemRolePrefix}${role}'/{ printf "" }'
)
#
[[ -z ${UniventionSystemInstallSystemRole} ]] && echo "MISSING PACKAGE(${UniventionSystemInstallSystemRolePrefix}${role}) ... exit(1)" && exit 1
[[ -z ${UniventionSystemInstallSystemRole} ]] ||
	if [[ "${role}" == "master" ]]; then
		#
		# root secret
		secret=/var/lib/univention-ldap/root.secret
		#
		mkdir --parents $(dirname ${secret}) && {
			echo -n ${rootpw} >${secret}
			chmod 600 ${secret}
		}
		#
		# ucr default(s) for master
		univention-config-registry set "ldap/translogfile=/var/lib/univention-ldap/listener/listener" \
			"ldap/master=${hostname}.${domainname}" \
			"kerberos/adminserver=${hostname}.${domainname}"
		#
		# mail/postfix/mydestination ( <Domain Users with mailPrimaryAddress>@${domainname} )
		univention-config-registry set \
			mail/postfix/mydestination='$mydomain, $myhostname, localhost.$mydomain, localhost'
		#
		# master join
		mkdir --parents /var/univention-join /usr/share/univention-join && {
			touch /var/univention-join/joined && ln --symbolic --force /var/univention-join/joined /usr/share/univention-join/.joined
			touch /var/univention-join/status && ln --symbolic --force /var/univention-join/status /usr/lib/univention-install/.index.txt

			for inst in $(find /usr/lib/univention-install -name *.inst -executable -type f | sort); do
				${inst} 2>&1 || /bin/true
			done

		}
		#
		# cleanup
		rm --force ${secret}
	else
		[[ -z ${dcname:-} ]] && ERROR=TRUE || ERROR=FALSE
		[[ -z ${dcpass:-} ]] && ERROR=TRUE

		[[ ${ERROR} =~ ^TRUE$ ]] &&
			echo "SERVER ROLE(${role}) NEED DOMAIN-CONTROLLER(dcname=<STRING(HOST)>) USER-ACCOUNT(dcuser=<STRING|DEFAULT(Administrator)>) AND PASSWORD(dcpass=<STRING>)"

		[[ ${ERROR} =~ ^FALSE$ ]] && [[ ${dcwait-} =~ ^1|yes|true|YES|TRUE$ ]] && {
			printf "%s" "Wait for a primary directory node forever! ( http://${dcname}/joined ) .."
			while ! curl --silent --fail --output /dev/null http://${dcname}/joined; do
				printf "%c" "." && sleep 30
			done
			printf "\n"
		}

		[[ ${ERROR} =~ ^FALSE$ ]] &&
			/usr/share/univention-join/univention-join \
				-dcname ${dcname} \
				-dcaccount ${dcuser:-Administrator} \
				-dcpwd <(printf "%s" "${dcpass}")

	fi
#
## Setup join from container mode environment
debug "### STOPP SCRIPT($(pwd)/$0) ###"

## ucr removes
UniventionConfigRegistryUnSet ${ucrremoves[@]}

## ucr changes
UniventionConfigRegistrySet ${ucrchanges[@]}

## ucr commit
UniventionConfigCommit ${ucrcommit[@]}

## cleanup
unset \
	role \
	hostname domainname \
	sshkey rootpw passwd \
	dcpass dcuser dcname \
	password_hashing_method \
	machine_password_length \
	machine_password_complexity \
	ucrchanges ucrremoves ucrcounter ucrcommit

debug "### CLEAN SCRIPT($(pwd)/$0) ###"
