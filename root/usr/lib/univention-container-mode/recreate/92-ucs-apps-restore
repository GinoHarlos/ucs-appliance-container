#!/bin/bash
#
# Univention Container Mode - apps-restore
#
# Copyright 2020-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## util(s)
source /usr/lib/univention-container-mode/utils.sh || exit 1

## function(s)
# function name() { # name: (IN)[>(OUT)]
# 	echo function
# }

## ucr shell
eval "$(ucr shell machine/password/complexity machine/password/length)"

## declare
declare -a ucrchanges
# ucrchanges+=("key=value")
declare -a ucrremoves
# ucrremoves+=("key")

declare -A ucrcounter
# ucrcounter[<STRING>]=<INT>

declare -A ucrcommit
# ucrcommit+=/<PATH>/<FILE> OR ucrcommit[<FILE>]=/<PATH>/<FILE>

debug "### START SCRIPT($(pwd)/$0) ###"
## apps restore from backup for container mode environment
#
restore=/var/backups/univention-container-mode

#
# restore only if we have a vaild backup ( join/99-system-restore-initialize )
[[ -f ${restore}/restore ]] && [[ -d ${restore}/registry ]] && {
	for app in $(
		awk '/^appcenter\/apps\/.*\/status.*installed$/{ split($1,APP,"/"); print APP[3] }' ${restore}/registry/base*conf 2>/dev/null
	); do
		[[ $(ucr get appcenter/apps/${app}/status) =~ ^installed$ ]] || {
			dcuser="${app}-restore-install"
			dcpass="${rootpw:-$(</dev/shm/univention-container-mode.secrets)}"
			dcpwd="/dev/shm/univention-container-mode.${app}.dcpwd.credentials"

			[[ -z ${dcpass:-} ]] && dcpass=$(
				pwgen -1 -${machine_password_complexity:-scn} ${machine_password_length:-64} | tr --delete '\n'
			)

			[[ $(univention-ldapsearch -LLL uid=${dcuser} dn 2>/dev/null) =~ ${dcuser} ]] &&
				udm users/user remove --dn "uid=${dcuser},$(ucr get ldap/base)"

			# crate temporary install account
			udm users/user create \
				--set username="${dcuser}" \
				--set lastname="${dcuser}" \
				--set password="${dcpass}" \
				--set objectFlag=hidden

			printf "%s" "${dcpass}" > \
				${dcpwd}

			# get old installed app version
			version=$(
				egrep -- "^appcenter/apps/${app}/version" ${restore}/registry/base*conf | head -1 | awk '{ printf $2 }'
			)

			# try to cleanup
			univention-app remove --noninteractive --skip-checks --username ${dcuser} --pwdfile ${dcpwd} --do-not-backup ${app}=${version} || /bin/true

			UniventionAddApp --skip-checks --username ${dcuser} --pwdfile ${dcpwd} ${app}=${version} || /bin/true

			rm --force --verbose \
				${dcpwd}

			# remove temporary install account
			udm users/user remove --dn "uid=${dcuser},$(ucr get ldap/base)"
		}
	done
}
#
## apps restore from backup for container mode environment
debug "### STOPP SCRIPT($(pwd)/$0) ###"

## ucr removes
UniventionConfigRegistryUnSet ${ucrremoves[@]}

## ucr changes
UniventionConfigRegistrySet ${ucrchanges[@]}

## ucr commit
UniventionConfigCommit ${ucrcommit[@]}

## cleanup
unset \
	machine_password_length \
	machine_password_complexity \
	ucrchanges ucrremoves ucrcounter ucrcommit

debug "### CLEAN SCRIPT($(pwd)/$0) ###"
