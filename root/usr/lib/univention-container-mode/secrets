#!/bin/bash
#
# Univention Container Mode - secrets
#
# Copyright 2020-2021 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

secrets=/dev/shm/univention-container-mode.secrets

[[ $(id --user) != 0 ]] && {
	echo "USE ($0) ONLY AS ROOT USER! ... exit(1)"
	exit 1
}

while (("${#@}")); do
	case ${1} in
	--join-help) {
		HELP=TRUE
	} ;;
	esac
	shift
done

eval "$(ucr shell hostname domainname)"

[[ -z ${passwd:-} ]] && [[ -f ${secrets} ]] && passwd=$(<${secrets}) && rm --force --verbose ${secrets} && echo

[[ -z ${passwd:-} ]] || {
	[[ "$(ucr get server/role)" =~ master ]] && [[ ${HELP:-} =~ ^1|yes|true|YES|TRUE$ ]] && {
		ADMIN="Administrator"
		PPATH="%LOGONSERVER%\%USERNAME%\windows-profiles\default"
		SPATH="\\\\${hostname}.${domainname}\\${ADMIN}"
		DRIVE="U:"

		[[ "$(ucr get samba/share/home)" =~ ^1|yes|true|YES|TRUE$ ]] && {
			[[ "$(udm users/user list --filter '(uid=Administrator)' | awk '/profilepath/{ print $2 }')" == "${PPATH}" ]] || {
				smbstatus >/dev/null 2>&1 && univention-directory-manager \
					users/user modify \
					--dn "uid=${ADMIN},cn=users,$(ucr get ldap/base)" \
					--set profilepath=${PPATH} \
					--set sambahome=${SPATH} \
					--set homedrive=${DRIVE} >/dev/null 2>&1 && cat <<EOF
SET PROFILEPATH, SAMBAHOME AND HOMEDRIVE FOR DC USER(${ADMIN}) TO
	PROFILEPATH(${PPATH})
	SAMBAHOME(${SPATH})
	HOMEDRIVE(${DRIVE})

EOF
			}
		}

		SYSVOL="\\\\${hostname}.${domainname}\\sysvol\\${domainname}\\Policies\\"

		JoinHelp=$(
			cat <<EOF


--join-help

0.	DC    HELP: SOME USEFUL COMMANDS ON YOUR LOCAL WINDOWS MACHINE WITH ADMINISTRATIVE PRIVILEGES ...
0.1	   COMMAND: YOU CAN COPY AND PASTE THE PowerShell( ... ) COMMANDS DIRECTLY TO YOUR POWERSHELL ...

1.	DC     DNS: DO NOT FORGET TO SETUP THE DOMAIN NAME SERVICE CONFIGURATION ON YOUR LOCAL MACHINE ;)
1.1	     CHECK: PowerShell(nslookup ${hostname}.${domainname})

2.	DC ROOT CA: PowerShell(curl.exe --silent --location http://${hostname}.${domainname}:80/ucs-root-ca.crt --output C:\\${domainname}-root-ca.crt)
2.1	  TRUST CA: PowerShell(Import-Certificate -FilePath C:\\${domainname}-root-ca.crt -CertStoreLocation 'Cert:\LocalMachine\Root' -Verbose)
2.2	  CLEAN CA: PowerShell(Remove-Item -Path C:\\${domainname}-root-ca.crt -Force)
2.3	 INTERFACE: HTTPS(https://${hostname}.${domainname}) OR BUT NOT RECOMMANDED HTTP(http://${hostname}.${domainname})

3.	DC    JOIN: PowerShell(\$D="${domainname}"; \$P="${passwd}" | ConvertTo-SecureString -asPlainText -Force; \$U="\$D\\${ADMIN}"; \$C=New-Object System.Management.Automation.PSCredential(\$U,\$P); Add-Computer -DomainName \$D -Credential \$C)
3.1	    REBOOT: PowerShell(Restart-Computer -ComputerName localhost -Force)
3.2	     LOGIN: AFTER SUCCESSFULY JOIN YOU CAN LOGIN WITH USER($(ucr get windows/domain)\\${ADMIN}) AND PASS(${passwd})
3.3	      ADMX: GET ADMINISTRATIVE TEMPLATES FROM(https://www.microsoft.com/en-us/search?q=Administrative+Templates+admx+Windows+10) AND SYNC THE DIRECTORY(PolicyDefinitions) TO(${SYSVOL})
EOF
		)
	}

	[[ "$(ucr get server/role)" =~ master ]] && cat <<EOF
PASSWORD FOR DOMAIN(${domainname}) ON HOST(${hostname}) WITH ROLE($(ucr get server/role)):
	LOCAL USER(root)          PASS(${passwd})
	DC    USER(Administrator) PASS(${passwd})${JoinHelp:-}
EOF

	[[ "$(ucr get server/role)" =~ master ]] || cat <<EOF
PASSWORD FOR HOST($(hostname --long)) WITH ROLE($(ucr get server/role)):
	LOCAL USER(root)          PASS(${passwd})
EOF
}
